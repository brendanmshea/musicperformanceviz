<?xml version="1.0" encoding="utf-8"?>
<!-- Adapted from http://www.objectsatellite.com/html/FlexSolutions/MultiCheckBoxWindow/MultiCheckBoxWindowDemo.html -->
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" title="Please select" modalTransparencyBlur="0">
	<mx:Script>
        <![CDATA[
        	import mx.containers.Canvas;       
            import mx.managers.PopUpManager;
            import mx.controls.Label;
            import mx.controls.Text;
            import mx.core.Application;
            import mx.core.Repeater;
            import mx.core.UIComponent;
            import mx.collections.ArrayCollection;                        
                 
            // A reference to the TextInput control in which to put the result.
            //public var selections:Text;
            
            [Bindable]
            public var dataProvider:ArrayCollection;

			public var callbackOnInitialize:Function;
			public var callbackOnRecord:Function;
			public var callbackOnComplete:Function;
			public var itemColor:Function;
			public var canvas:Canvas;

             private function recordSelections(clearSelections:Boolean, allSelections:Boolean):void
             {
             	callbackOnInitialize();
             	// Erase the current labels.
             	canvas.removeAllChildren();
                //selections.text = "";

                var yCurrent:int = 0;
                for (var i:int = 0; i < rpCheckBox.length; i++) {
              
                      // We dynamically add a "selected" property 
                      // to the autoAccessories dataProvider.
                      if (clearSelections)  {
                         dataProvider[i].selected = false;
                         callbackOnRecord(rpCheckBox[i].data, false);
                      } else {
                      	 if (allSelections) {
                      	 	rpCheckBox[i].selected = true;
                      	 }
                         dataProvider[i].selected = rpCheckBox[i].selected;
                         if (rpCheckBox[i].selected) {
                         	var xCurrent:int = 0;
                         	// If the item color is non-black, draw a legend box.
                         	var itemColor:int = itemColor(rpCheckBox[i].label);
                         	if (itemColor != 0x000000) {
                         		var legendSquare:UIComponent = new UIComponent();
                         		legendSquare.graphics.beginFill(itemColor);
                         		legendSquare.graphics.drawRect(0, yCurrent + 4, 11, 11);
                         		legendSquare.graphics.endFill();
                         		canvas.addChild(legendSquare);
                         		xCurrent += 14;
                         	}
                         	var label:Label = new Label();
                         	label.text = rpCheckBox[i].label;
							label.setStyle("fontSize", 11);
							label.x = xCurrent;
							label.y = yCurrent;
							canvas.addChild(label);
							yCurrent += 14;
                         }
                         callbackOnRecord(rpCheckBox[i].data, rpCheckBox[i].selected);
                      }
                 }
                PopUpManager.removePopUp(this);
                callbackOnComplete();                
             }
 
        ]]>
    </mx:Script>

    <mx:VBox borderStyle="inset" 
             horizontalGap="10" verticalGap="5"
             paddingLeft="10" paddingTop="10"
             paddingBottom="10" paddingRight="10" 
             maxHeight="300"    
             verticalScrollPolicy="auto"
             horizontalScrollPolicy="off"
             >
             <mx:Repeater id="rp" dataProvider="{dataProvider}">
                 <mx:CheckBox id="rpCheckBox"
                      selected="{rp.currentItem.selected}"  
                     label="{rp.currentItem.label}"
                     data="{rp.currentItem.data}"                      
                 />
             </mx:Repeater>    
    </mx:VBox>

    <mx:HBox>
        <mx:Button label="OK"     click="recordSelections(false, false)" />
        <mx:Button label="Cancel" click="PopUpManager.removePopUp(this)" />
        <!-- "true" passed into recordSelections tells it that we're clearing -->
        <mx:Button label="Clear"  click="recordSelections(true, false)" />
        <mx:Button label="All"    click="recordSelections(false, true)" />      
    </mx:HBox>
</mx:TitleWindow>
